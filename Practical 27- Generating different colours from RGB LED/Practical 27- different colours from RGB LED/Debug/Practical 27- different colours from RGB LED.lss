
Practical 27- different colours from RGB LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000124  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000124  00000198  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000198  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  00000864  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  000008fb  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  0000092a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000002eb  00000000  00000000  0000094a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000e1  00000000  00000000  00000c35  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000022d  00000000  00000000  00000d16  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00000f44  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000015d  00000000  00000000  00000f68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000010c5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 90 00 	jmp	0x120	; 0x120 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <avr/io.h>
#include <avr/delay.h>

int main(void)
{
    DDRB=0xFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	87 bb       	out	0x17, r24	; 23
	while(1)
    {
        PORTB=0x07;
  70:	67 e0       	ldi	r22, 0x07	; 7
		_delay_ms(10000);
		PORTB=0x01;
  72:	51 e0       	ldi	r21, 0x01	; 1
		_delay_ms(10000);
		PORTB=0x02;
  74:	42 e0       	ldi	r20, 0x02	; 2
		_delay_ms(10000);
		PORTB=0x04;
  76:	34 e0       	ldi	r19, 0x04	; 4
		_delay_ms(10000);
		PORTB=0x03;
  78:	23 e0       	ldi	r18, 0x03	; 3
		_delay_ms(10000);
		PORTB=0x06;
  7a:	96 e0       	ldi	r25, 0x06	; 6
		_delay_ms(10000);
		PORTB=0x05;
  7c:	85 e0       	ldi	r24, 0x05	; 5
int main(void)
{
    DDRB=0xFF;
	while(1)
    {
        PORTB=0x07;
  7e:	68 bb       	out	0x18, r22	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  80:	7f e7       	ldi	r23, 0x7F	; 127
  82:	e4 e8       	ldi	r30, 0x84	; 132
  84:	fe e1       	ldi	r31, 0x1E	; 30
  86:	71 50       	subi	r23, 0x01	; 1
  88:	e0 40       	sbci	r30, 0x00	; 0
  8a:	f0 40       	sbci	r31, 0x00	; 0
  8c:	e1 f7       	brne	.-8      	; 0x86 <main+0x1a>
  8e:	00 c0       	rjmp	.+0      	; 0x90 <main+0x24>
  90:	00 00       	nop
		_delay_ms(10000);
		PORTB=0x01;
  92:	58 bb       	out	0x18, r21	; 24
  94:	7f e7       	ldi	r23, 0x7F	; 127
  96:	e4 e8       	ldi	r30, 0x84	; 132
  98:	fe e1       	ldi	r31, 0x1E	; 30
  9a:	71 50       	subi	r23, 0x01	; 1
  9c:	e0 40       	sbci	r30, 0x00	; 0
  9e:	f0 40       	sbci	r31, 0x00	; 0
  a0:	e1 f7       	brne	.-8      	; 0x9a <main+0x2e>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <main+0x38>
  a4:	00 00       	nop
		_delay_ms(10000);
		PORTB=0x02;
  a6:	48 bb       	out	0x18, r20	; 24
  a8:	7f e7       	ldi	r23, 0x7F	; 127
  aa:	e4 e8       	ldi	r30, 0x84	; 132
  ac:	fe e1       	ldi	r31, 0x1E	; 30
  ae:	71 50       	subi	r23, 0x01	; 1
  b0:	e0 40       	sbci	r30, 0x00	; 0
  b2:	f0 40       	sbci	r31, 0x00	; 0
  b4:	e1 f7       	brne	.-8      	; 0xae <main+0x42>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <main+0x4c>
  b8:	00 00       	nop
		_delay_ms(10000);
		PORTB=0x04;
  ba:	38 bb       	out	0x18, r19	; 24
  bc:	7f e7       	ldi	r23, 0x7F	; 127
  be:	e4 e8       	ldi	r30, 0x84	; 132
  c0:	fe e1       	ldi	r31, 0x1E	; 30
  c2:	71 50       	subi	r23, 0x01	; 1
  c4:	e0 40       	sbci	r30, 0x00	; 0
  c6:	f0 40       	sbci	r31, 0x00	; 0
  c8:	e1 f7       	brne	.-8      	; 0xc2 <main+0x56>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x60>
  cc:	00 00       	nop
		_delay_ms(10000);
		PORTB=0x03;
  ce:	28 bb       	out	0x18, r18	; 24
  d0:	7f e7       	ldi	r23, 0x7F	; 127
  d2:	e4 e8       	ldi	r30, 0x84	; 132
  d4:	fe e1       	ldi	r31, 0x1E	; 30
  d6:	71 50       	subi	r23, 0x01	; 1
  d8:	e0 40       	sbci	r30, 0x00	; 0
  da:	f0 40       	sbci	r31, 0x00	; 0
  dc:	e1 f7       	brne	.-8      	; 0xd6 <main+0x6a>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <main+0x74>
  e0:	00 00       	nop
		_delay_ms(10000);
		PORTB=0x06;
  e2:	98 bb       	out	0x18, r25	; 24
  e4:	7f e7       	ldi	r23, 0x7F	; 127
  e6:	e4 e8       	ldi	r30, 0x84	; 132
  e8:	fe e1       	ldi	r31, 0x1E	; 30
  ea:	71 50       	subi	r23, 0x01	; 1
  ec:	e0 40       	sbci	r30, 0x00	; 0
  ee:	f0 40       	sbci	r31, 0x00	; 0
  f0:	e1 f7       	brne	.-8      	; 0xea <main+0x7e>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <main+0x88>
  f4:	00 00       	nop
		_delay_ms(10000);
		PORTB=0x05;
  f6:	88 bb       	out	0x18, r24	; 24
  f8:	7f e7       	ldi	r23, 0x7F	; 127
  fa:	e4 e8       	ldi	r30, 0x84	; 132
  fc:	fe e1       	ldi	r31, 0x1E	; 30
  fe:	71 50       	subi	r23, 0x01	; 1
 100:	e0 40       	sbci	r30, 0x00	; 0
 102:	f0 40       	sbci	r31, 0x00	; 0
 104:	e1 f7       	brne	.-8      	; 0xfe <main+0x92>
 106:	00 c0       	rjmp	.+0      	; 0x108 <main+0x9c>
 108:	00 00       	nop
		_delay_ms(10000);
		PORTB=0x00;
 10a:	18 ba       	out	0x18, r1	; 24
 10c:	7f e7       	ldi	r23, 0x7F	; 127
 10e:	e4 e8       	ldi	r30, 0x84	; 132
 110:	fe e1       	ldi	r31, 0x1E	; 30
 112:	71 50       	subi	r23, 0x01	; 1
 114:	e0 40       	sbci	r30, 0x00	; 0
 116:	f0 40       	sbci	r31, 0x00	; 0
 118:	e1 f7       	brne	.-8      	; 0x112 <main+0xa6>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <main+0xb0>
 11c:	00 00       	nop
 11e:	af cf       	rjmp	.-162    	; 0x7e <main+0x12>

00000120 <_exit>:
 120:	f8 94       	cli

00000122 <__stop_program>:
 122:	ff cf       	rjmp	.-2      	; 0x122 <__stop_program>
