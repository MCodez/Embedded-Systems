
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000de  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000de  00000152  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000154  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  00000820  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  000008b7  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  000008e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000001eb  00000000  00000000  00000906  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000e1  00000000  00000000  00000af1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001e1  00000000  00000000  00000bd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00000db4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000124  00000000  00000000  00000dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00000efc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 6d 00 	jmp	0xda	; 0xda <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

#include <avr/io.h>
#include <avr/delay.h>
int main(void)
{
	DDRC=0xFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	84 bb       	out	0x14, r24	; 20
	DDRD=0XFF;
  70:	81 bb       	out	0x11, r24	; 17
	
    while(1)
    {
		PORTC=0x82;
  72:	62 e8       	ldi	r22, 0x82	; 130
		PORTD=0xDF;
  74:	5f ed       	ldi	r21, 0xDF	; 223
		_delay_ms(2000);
		PORTC=0x00;
		PORTD=0x40;
  76:	40 e4       	ldi	r20, 0x40	; 64
		_delay_ms(2000);
		PORTC=0x28;
  78:	38 e2       	ldi	r19, 0x28	; 40
		PORTD=0x7F;
  7a:	2f e7       	ldi	r18, 0x7F	; 127
		_delay_ms(2000);
		PORTC=0x10;
  7c:	90 e1       	ldi	r25, 0x10	; 16
		PORTD=0xFE;
  7e:	8e ef       	ldi	r24, 0xFE	; 254
	DDRC=0xFF;
	DDRD=0XFF;
	
    while(1)
    {
		PORTC=0x82;
  80:	65 bb       	out	0x15, r22	; 21
		PORTD=0xDF;
  82:	52 bb       	out	0x12, r21	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  84:	7f e7       	ldi	r23, 0x7F	; 127
  86:	ea e1       	ldi	r30, 0x1A	; 26
  88:	f6 e0       	ldi	r31, 0x06	; 6
  8a:	71 50       	subi	r23, 0x01	; 1
  8c:	e0 40       	sbci	r30, 0x00	; 0
  8e:	f0 40       	sbci	r31, 0x00	; 0
  90:	e1 f7       	brne	.-8      	; 0x8a <main+0x1e>
  92:	00 c0       	rjmp	.+0      	; 0x94 <main+0x28>
  94:	00 00       	nop
		_delay_ms(2000);
		PORTC=0x00;
  96:	15 ba       	out	0x15, r1	; 21
		PORTD=0x40;
  98:	42 bb       	out	0x12, r20	; 18
  9a:	7f e7       	ldi	r23, 0x7F	; 127
  9c:	ea e1       	ldi	r30, 0x1A	; 26
  9e:	f6 e0       	ldi	r31, 0x06	; 6
  a0:	71 50       	subi	r23, 0x01	; 1
  a2:	e0 40       	sbci	r30, 0x00	; 0
  a4:	f0 40       	sbci	r31, 0x00	; 0
  a6:	e1 f7       	brne	.-8      	; 0xa0 <main+0x34>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <main+0x3e>
  aa:	00 00       	nop
		_delay_ms(2000);
		PORTC=0x28;
  ac:	35 bb       	out	0x15, r19	; 21
		PORTD=0x7F;
  ae:	22 bb       	out	0x12, r18	; 18
  b0:	7f e7       	ldi	r23, 0x7F	; 127
  b2:	ea e1       	ldi	r30, 0x1A	; 26
  b4:	f6 e0       	ldi	r31, 0x06	; 6
  b6:	71 50       	subi	r23, 0x01	; 1
  b8:	e0 40       	sbci	r30, 0x00	; 0
  ba:	f0 40       	sbci	r31, 0x00	; 0
  bc:	e1 f7       	brne	.-8      	; 0xb6 <main+0x4a>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <main+0x54>
  c0:	00 00       	nop
		_delay_ms(2000);
		PORTC=0x10;
  c2:	95 bb       	out	0x15, r25	; 21
		PORTD=0xFE;
  c4:	82 bb       	out	0x12, r24	; 18
  c6:	7f e7       	ldi	r23, 0x7F	; 127
  c8:	ea e1       	ldi	r30, 0x1A	; 26
  ca:	f6 e0       	ldi	r31, 0x06	; 6
  cc:	71 50       	subi	r23, 0x01	; 1
  ce:	e0 40       	sbci	r30, 0x00	; 0
  d0:	f0 40       	sbci	r31, 0x00	; 0
  d2:	e1 f7       	brne	.-8      	; 0xcc <main+0x60>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <main+0x6a>
  d6:	00 00       	nop
  d8:	d3 cf       	rjmp	.-90     	; 0x80 <main+0x14>

000000da <_exit>:
  da:	f8 94       	cli

000000dc <__stop_program>:
  dc:	ff cf       	rjmp	.-2      	; 0xdc <__stop_program>
