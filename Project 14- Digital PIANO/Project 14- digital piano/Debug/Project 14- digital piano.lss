
Project 14- digital piano.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003ec  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  000003ec  00000460  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  0000047c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  00000b48  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  00000bdf  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000c0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000082e  00000000  00000000  00000c6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000202  00000000  00000000  0000149c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000366  00000000  00000000  0000169e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  00001a04  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000179  00000000  00000000  00001ac4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000425  00000000  00000000  00001c3d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00002062  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ee       	ldi	r30, 0xEC	; 236
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 37       	cpi	r26, 0x7A	; 122
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 19 01 	call	0x232	; 0x232 <main>
  7a:	0c 94 f4 01 	jmp	0x3e8	; 0x3e8 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_cmd>:
	cmd1=((abc<<4)&(0xF0));
	LCD_cmd(cmd1);
}
void LCD_cmd(unsigned char abc)
{
	LCD_port=abc;
  82:	85 bb       	out	0x15, r24	; 21
	LCD_port&=~(1<<RS);//RS=0 for command
  84:	a8 98       	cbi	0x15, 0	; 21
	LCD_port&=~(1<<RW);///rw=0
  86:	a9 98       	cbi	0x15, 1	; 21
	LCD_port|=(1<<EN);///
  88:	aa 9a       	sbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8a:	8f e9       	ldi	r24, 0x9F	; 159
  8c:	9f e0       	ldi	r25, 0x0F	; 15
  8e:	01 97       	sbiw	r24, 0x01	; 1
  90:	f1 f7       	brne	.-4      	; 0x8e <LCD_cmd+0xc>
  92:	00 c0       	rjmp	.+0      	; 0x94 <LCD_cmd+0x12>
  94:	00 00       	nop
	_delay_ms(1);///delay for high to low pulse
	LCD_port&=~(1<<EN);
  96:	aa 98       	cbi	0x15, 2	; 21
  98:	08 95       	ret

0000009a <dis_cmd>:
	dis_cmd(0x28);//SET 4 BIT 16X2
	dis_cmd(0x06);////ENTRY MODE
	dis_cmd(0x0c);//display on cursor off
}
void dis_cmd(unsigned char abc)
{
  9a:	cf 93       	push	r28
  9c:	c8 2f       	mov	r28, r24
	char cmd1;
	cmd1=abc&0xF0;
	LCD_cmd(cmd1);
  9e:	80 7f       	andi	r24, 0xF0	; 240
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	0e 94 41 00 	call	0x82	; 0x82 <LCD_cmd>
	cmd1=((abc<<4)&(0xF0));
  a6:	20 e1       	ldi	r18, 0x10	; 16
  a8:	c2 9f       	mul	r28, r18
  aa:	c0 01       	movw	r24, r0
  ac:	11 24       	eor	r1, r1
	LCD_cmd(cmd1);
  ae:	99 27       	eor	r25, r25
  b0:	0e 94 41 00 	call	0x82	; 0x82 <LCD_cmd>
}
  b4:	cf 91       	pop	r28
  b6:	08 95       	ret

000000b8 <lcd_init>:
#define RW 1
#define EN 2
void lcd_init()
{

	dis_cmd(0x02);//HOME POSITION
  b8:	82 e0       	ldi	r24, 0x02	; 2
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	0e 94 4d 00 	call	0x9a	; 0x9a <dis_cmd>
	dis_cmd(0x28);//SET 4 BIT 16X2
  c0:	88 e2       	ldi	r24, 0x28	; 40
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	0e 94 4d 00 	call	0x9a	; 0x9a <dis_cmd>
	dis_cmd(0x06);////ENTRY MODE
  c8:	86 e0       	ldi	r24, 0x06	; 6
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	0e 94 4d 00 	call	0x9a	; 0x9a <dis_cmd>
	dis_cmd(0x0c);//display on cursor off
  d0:	8c e0       	ldi	r24, 0x0C	; 12
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	0e 94 4d 00 	call	0x9a	; 0x9a <dis_cmd>
  d8:	08 95       	ret

000000da <LCD_data>:
	LCD_port&=~(1<<EN);
}

void LCD_data(unsigned char abc)
{
	LCD_port=abc;
  da:	85 bb       	out	0x15, r24	; 21
	LCD_port|=(1<<RS);
  dc:	a8 9a       	sbi	0x15, 0	; 21
	LCD_port&=~(1<<RW);
  de:	a9 98       	cbi	0x15, 1	; 21
	LCD_port|=(1<<EN);
  e0:	aa 9a       	sbi	0x15, 2	; 21
  e2:	8f e9       	ldi	r24, 0x9F	; 159
  e4:	9f e0       	ldi	r25, 0x0F	; 15
  e6:	01 97       	sbiw	r24, 0x01	; 1
  e8:	f1 f7       	brne	.-4      	; 0xe6 <LCD_data+0xc>
  ea:	00 c0       	rjmp	.+0      	; 0xec <LCD_data+0x12>
  ec:	00 00       	nop
	_delay_ms(1);
	LCD_port&=~(1<<EN);
  ee:	aa 98       	cbi	0x15, 2	; 21
  f0:	08 95       	ret

000000f2 <dis_data>:
}

void dis_data(unsigned char abc)
{
  f2:	cf 93       	push	r28
  f4:	c8 2f       	mov	r28, r24
	char data1;
	data1=abc&0xF0;
	LCD_data(data1);
  f6:	80 7f       	andi	r24, 0xF0	; 240
  f8:	0e 94 6d 00 	call	0xda	; 0xda <LCD_data>
	data1=((abc<<4)&0xF0);
	LCD_data(data1);
  fc:	8c 2f       	mov	r24, r28
  fe:	82 95       	swap	r24
 100:	80 7f       	andi	r24, 0xF0	; 240
 102:	0e 94 6d 00 	call	0xda	; 0xda <LCD_data>
}
 106:	cf 91       	pop	r28
 108:	08 95       	ret

0000010a <LCD_string>:

void LCD_string(unsigned char *str)
{
 10a:	cf 93       	push	r28
 10c:	df 93       	push	r29
 10e:	ec 01       	movw	r28, r24
	int i;
	while(str[i]!='\0')
 110:	88 81       	ld	r24, Y
 112:	88 23       	and	r24, r24
 114:	31 f0       	breq	.+12     	; 0x122 <LCD_string+0x18>
	LCD_data(data1);
	data1=((abc<<4)&0xF0);
	LCD_data(data1);
}

void LCD_string(unsigned char *str)
 116:	21 96       	adiw	r28, 0x01	; 1
{
	int i;
	while(str[i]!='\0')
	{	dis_data(str[i]);
 118:	0e 94 79 00 	call	0xf2	; 0xf2 <dis_data>
}

void LCD_string(unsigned char *str)
{
	int i;
	while(str[i]!='\0')
 11c:	89 91       	ld	r24, Y+
 11e:	81 11       	cpse	r24, r1
 120:	fb cf       	rjmp	.-10     	; 0x118 <LCD_string+0xe>
	{	dis_data(str[i]);
		i++;
	}

}
 122:	df 91       	pop	r29
 124:	cf 91       	pop	r28
 126:	08 95       	ret

00000128 <key_scan>:

char key_scan()
{
	while(1)
	{
		PORTD=0x0E;
 128:	8e e0       	ldi	r24, 0x0E	; 14
		{
			while(!(PINA&0x08));
			return('+');
		}
		
		PORTD=0x0D;
 12a:	9d e0       	ldi	r25, 0x0D	; 13
			while(!(PINA&0x08));
			return('=');
		}
		
		
		PORTD=0x0B;
 12c:	2b e0       	ldi	r18, 0x0B	; 11
			while(!(PINA&0x08));
			return('0');
		}
		
		
		PORTD=0x07;
 12e:	37 e0       	ldi	r19, 0x07	; 7

char key_scan()
{
	while(1)
	{
		PORTD=0x0E;
 130:	82 bb       	out	0x12, r24	; 18
 132:	ef e1       	ldi	r30, 0x1F	; 31
 134:	fe e4       	ldi	r31, 0x4E	; 78
 136:	31 97       	sbiw	r30, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <key_scan+0xe>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <key_scan+0x14>
 13c:	00 00       	nop
		_delay_ms(5);
		if((PINA&0x01)==0)
 13e:	c8 99       	sbic	0x19, 0	; 25
 140:	04 c0       	rjmp	.+8      	; 0x14a <key_scan+0x22>
		{
			while(!(PINA&0x01));
 142:	c8 9b       	sbis	0x19, 0	; 25
 144:	fe cf       	rjmp	.-4      	; 0x142 <key_scan+0x1a>
			return('/');
 146:	8f e2       	ldi	r24, 0x2F	; 47
 148:	08 95       	ret
		}
		if((PINA&0x02)==0)
 14a:	c9 99       	sbic	0x19, 1	; 25
 14c:	04 c0       	rjmp	.+8      	; 0x156 <key_scan+0x2e>
		{
			while(!(PINA&0x02));
 14e:	c9 9b       	sbis	0x19, 1	; 25
 150:	fe cf       	rjmp	.-4      	; 0x14e <key_scan+0x26>
			return('X');
 152:	88 e5       	ldi	r24, 0x58	; 88
 154:	08 95       	ret
		}
		if((PINA&0x04)==0)
 156:	ca 99       	sbic	0x19, 2	; 25
 158:	04 c0       	rjmp	.+8      	; 0x162 <key_scan+0x3a>
		{
			while(!(PINA&0x04));
 15a:	ca 9b       	sbis	0x19, 2	; 25
 15c:	fe cf       	rjmp	.-4      	; 0x15a <key_scan+0x32>
			return('-');
 15e:	8d e2       	ldi	r24, 0x2D	; 45
 160:	08 95       	ret
		}
		if((PINA&0x08)==0)
 162:	cb 99       	sbic	0x19, 3	; 25
 164:	04 c0       	rjmp	.+8      	; 0x16e <key_scan+0x46>
		{
			while(!(PINA&0x08));
 166:	cb 9b       	sbis	0x19, 3	; 25
 168:	fe cf       	rjmp	.-4      	; 0x166 <key_scan+0x3e>
			return('+');
 16a:	8b e2       	ldi	r24, 0x2B	; 43
 16c:	08 95       	ret
		}
		
		PORTD=0x0D;
 16e:	92 bb       	out	0x12, r25	; 18
 170:	ef e1       	ldi	r30, 0x1F	; 31
 172:	fe e4       	ldi	r31, 0x4E	; 78
 174:	31 97       	sbiw	r30, 0x01	; 1
 176:	f1 f7       	brne	.-4      	; 0x174 <key_scan+0x4c>
 178:	00 c0       	rjmp	.+0      	; 0x17a <key_scan+0x52>
 17a:	00 00       	nop
		_delay_ms(5);
		if((PINA&0x01)==0)
 17c:	c8 99       	sbic	0x19, 0	; 25
 17e:	04 c0       	rjmp	.+8      	; 0x188 <key_scan+0x60>
		{
			while(!(PINA&0x01));
 180:	c8 9b       	sbis	0x19, 0	; 25
 182:	fe cf       	rjmp	.-4      	; 0x180 <key_scan+0x58>
			return('9');
 184:	89 e3       	ldi	r24, 0x39	; 57
 186:	08 95       	ret
		}
		if((PINA&0x02)==0)
 188:	c9 99       	sbic	0x19, 1	; 25
 18a:	04 c0       	rjmp	.+8      	; 0x194 <key_scan+0x6c>
		{
			while(!(PINA&0x02));
 18c:	c9 9b       	sbis	0x19, 1	; 25
 18e:	fe cf       	rjmp	.-4      	; 0x18c <key_scan+0x64>
			return('6');
 190:	86 e3       	ldi	r24, 0x36	; 54
 192:	08 95       	ret
		}
		if((PINA&0x04)==0)
 194:	ca 99       	sbic	0x19, 2	; 25
 196:	04 c0       	rjmp	.+8      	; 0x1a0 <key_scan+0x78>
		{
			while(!(PINA&0x04));
 198:	ca 9b       	sbis	0x19, 2	; 25
 19a:	fe cf       	rjmp	.-4      	; 0x198 <key_scan+0x70>
			return('3');
 19c:	83 e3       	ldi	r24, 0x33	; 51
 19e:	08 95       	ret
		}
		if((PINA&0x08)==0)
 1a0:	cb 99       	sbic	0x19, 3	; 25
 1a2:	04 c0       	rjmp	.+8      	; 0x1ac <key_scan+0x84>
		{
			while(!(PINA&0x08));
 1a4:	cb 9b       	sbis	0x19, 3	; 25
 1a6:	fe cf       	rjmp	.-4      	; 0x1a4 <key_scan+0x7c>
			return('=');
 1a8:	8d e3       	ldi	r24, 0x3D	; 61
 1aa:	08 95       	ret
		}
		
		
		PORTD=0x0B;
 1ac:	22 bb       	out	0x12, r18	; 18
 1ae:	ef e1       	ldi	r30, 0x1F	; 31
 1b0:	fe e4       	ldi	r31, 0x4E	; 78
 1b2:	31 97       	sbiw	r30, 0x01	; 1
 1b4:	f1 f7       	brne	.-4      	; 0x1b2 <key_scan+0x8a>
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <key_scan+0x90>
 1b8:	00 00       	nop
		_delay_ms(5);
		if((PINA&0x01)==0)
 1ba:	c8 99       	sbic	0x19, 0	; 25
 1bc:	04 c0       	rjmp	.+8      	; 0x1c6 <key_scan+0x9e>
		{
			while(!(PINA&0x01));
 1be:	c8 9b       	sbis	0x19, 0	; 25
 1c0:	fe cf       	rjmp	.-4      	; 0x1be <key_scan+0x96>
			return('8');
 1c2:	88 e3       	ldi	r24, 0x38	; 56
 1c4:	08 95       	ret
		}
		if((PINA&0x02)==0)
 1c6:	c9 99       	sbic	0x19, 1	; 25
 1c8:	04 c0       	rjmp	.+8      	; 0x1d2 <key_scan+0xaa>
		{
			while(!(PINA&0x02));
 1ca:	c9 9b       	sbis	0x19, 1	; 25
 1cc:	fe cf       	rjmp	.-4      	; 0x1ca <key_scan+0xa2>
			return('5');
 1ce:	85 e3       	ldi	r24, 0x35	; 53
 1d0:	08 95       	ret
		}
		if((PINA&0x04)==0)
 1d2:	ca 99       	sbic	0x19, 2	; 25
 1d4:	04 c0       	rjmp	.+8      	; 0x1de <key_scan+0xb6>
		{
			while(!(PINA&0x04));
 1d6:	ca 9b       	sbis	0x19, 2	; 25
 1d8:	fe cf       	rjmp	.-4      	; 0x1d6 <key_scan+0xae>
			return('2');
 1da:	82 e3       	ldi	r24, 0x32	; 50
 1dc:	08 95       	ret
		}
		if((PINA&0x08)==0)
 1de:	cb 99       	sbic	0x19, 3	; 25
 1e0:	04 c0       	rjmp	.+8      	; 0x1ea <key_scan+0xc2>
		{
			while(!(PINA&0x08));
 1e2:	cb 9b       	sbis	0x19, 3	; 25
 1e4:	fe cf       	rjmp	.-4      	; 0x1e2 <key_scan+0xba>
			return('0');
 1e6:	80 e3       	ldi	r24, 0x30	; 48
 1e8:	08 95       	ret
		}
		
		
		PORTD=0x07;
 1ea:	32 bb       	out	0x12, r19	; 18
 1ec:	ef e1       	ldi	r30, 0x1F	; 31
 1ee:	fe e4       	ldi	r31, 0x4E	; 78
 1f0:	31 97       	sbiw	r30, 0x01	; 1
 1f2:	f1 f7       	brne	.-4      	; 0x1f0 <key_scan+0xc8>
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <key_scan+0xce>
 1f6:	00 00       	nop
		_delay_ms(5);
		if((PINA&0x01)==0)
 1f8:	c8 99       	sbic	0x19, 0	; 25
 1fa:	04 c0       	rjmp	.+8      	; 0x204 <key_scan+0xdc>
		{
			while(!(PINA&0x01));
 1fc:	c8 9b       	sbis	0x19, 0	; 25
 1fe:	fe cf       	rjmp	.-4      	; 0x1fc <key_scan+0xd4>
			return('7');
 200:	87 e3       	ldi	r24, 0x37	; 55
 202:	08 95       	ret
		}
		if((PINA&0x02)==0)
 204:	c9 99       	sbic	0x19, 1	; 25
 206:	04 c0       	rjmp	.+8      	; 0x210 <key_scan+0xe8>
		{
			while(!(PINA&0x02));
 208:	c9 9b       	sbis	0x19, 1	; 25
 20a:	fe cf       	rjmp	.-4      	; 0x208 <key_scan+0xe0>
			return('4');
 20c:	84 e3       	ldi	r24, 0x34	; 52
 20e:	08 95       	ret
		}
		if((PINA&0x04)==0)
 210:	ca 99       	sbic	0x19, 2	; 25
 212:	04 c0       	rjmp	.+8      	; 0x21c <key_scan+0xf4>
		{
			while(!(PINA&0x04));
 214:	ca 9b       	sbis	0x19, 2	; 25
 216:	fe cf       	rjmp	.-4      	; 0x214 <key_scan+0xec>
			return('1');
 218:	81 e3       	ldi	r24, 0x31	; 49
 21a:	08 95       	ret
		}
		if((PINA&0x08)==0)
 21c:	cb 99       	sbic	0x19, 3	; 25
 21e:	88 cf       	rjmp	.-240    	; 0x130 <key_scan+0x8>
		{
			while(!(PINA&0x08));
 220:	cb 9b       	sbis	0x19, 3	; 25
 222:	fe cf       	rjmp	.-4      	; 0x220 <key_scan+0xf8>
			return('C');
 224:	83 e4       	ldi	r24, 0x43	; 67
		}
	}
}
 226:	08 95       	ret

00000228 <timer0_CTC>:

void timer0_CTC()
{
	TCCR0|=(1<<WGM01)|(1<<COM00)|(1<<CS01);
 228:	83 b7       	in	r24, 0x33	; 51
 22a:	8a 61       	ori	r24, 0x1A	; 26
 22c:	83 bf       	out	0x33, r24	; 51
	DDRB|=(1<<PB3);
 22e:	bb 9a       	sbi	0x17, 3	; 23
 230:	08 95       	ret

00000232 <main>:
}

int main(void)
{
	unsigned char a;
	DDRC=0xFF;
 232:	cf ef       	ldi	r28, 0xFF	; 255
 234:	c4 bb       	out	0x14, r28	; 20
	DDRB=0xFF;
 236:	c7 bb       	out	0x17, r28	; 23
	DDRA=0x00;
 238:	1a ba       	out	0x1a, r1	; 26
	DDRD=0xFF;
 23a:	c1 bb       	out	0x11, r28	; 17
	lcd_init();
 23c:	0e 94 5c 00 	call	0xb8	; 0xb8 <lcd_init>
	timer0_CTC();
 240:	0e 94 14 01 	call	0x228	; 0x228 <timer0_CTC>
	PORTA=0xFF;
 244:	cb bb       	out	0x1b, r28	; 27
	PORTD=0x00;
 246:	12 ba       	out	0x12, r1	; 18
	PORTB=0x00;
 248:	18 ba       	out	0x18, r1	; 24
	
	while(1)
	{
		a=key_scan();
		if(a=='1')
		{OCR0=59*3;
 24a:	0f 2e       	mov	r0, r31
 24c:	f1 eb       	ldi	r31, 0xB1	; 177
 24e:	af 2e       	mov	r10, r31
 250:	f0 2d       	mov	r31, r0
		
		PORTC=0x80;
 252:	d0 e8       	ldi	r29, 0x80	; 128
		LCD_string("Re");
		_delay_ms(1000);
		OCR0=0;
		dis_cmd(0x1);}
		if(a=='3')
		{OCR0=46*3;
 254:	0f 2e       	mov	r0, r31
 256:	fa e8       	ldi	r31, 0x8A	; 138
 258:	bf 2e       	mov	r11, r31
 25a:	f0 2d       	mov	r31, r0
		LCD_string("Sa");
		_delay_ms(1000);
		OCR0=0;
		dis_cmd(0x1);}
		if(a=='2')
		{OCR0=52*3;
 25c:	0f 2e       	mov	r0, r31
 25e:	fc e9       	ldi	r31, 0x9C	; 156
 260:	cf 2e       	mov	r12, r31
 262:	f0 2d       	mov	r31, r0
		LCD_string("Ga");
		_delay_ms(1000);
		OCR0=0;
		dis_cmd(0x1);}
		if(a=='4')
		{OCR0=44*3;
 264:	0f 2e       	mov	r0, r31
 266:	f4 e8       	ldi	r31, 0x84	; 132
 268:	df 2e       	mov	r13, r31
 26a:	f0 2d       	mov	r31, r0
		LCD_string("Ma");
		_delay_ms(1000);
		OCR0=0;
		dis_cmd(0x1);}
		if(a=='5')
		{OCR0=38*3;
 26c:	0f 2e       	mov	r0, r31
 26e:	f2 e7       	ldi	r31, 0x72	; 114
 270:	ef 2e       	mov	r14, r31
 272:	f0 2d       	mov	r31, r0
		LCD_string("Pa");
		_delay_ms(1000);
		OCR0=0;
		dis_cmd(0x1);}
		if(a=='6')
		{OCR0=34*5;
 274:	0f 2e       	mov	r0, r31
 276:	fa ea       	ldi	r31, 0xAA	; 170
 278:	ff 2e       	mov	r15, r31
 27a:	f0 2d       	mov	r31, r0
		LCD_string("Dha");
		_delay_ms(1000);
		OCR0=0;
		dis_cmd(0x1);}
		if(a=='7')
		{OCR0=30*7;
 27c:	02 ed       	ldi	r16, 0xD2	; 210
		LCD_string("Ni");
		_delay_ms(1000);
		OCR0=0;
		dis_cmd(0x1);}
		if(a=='8')
		{OCR0=28*7;
 27e:	14 ec       	ldi	r17, 0xC4	; 196
	
	
	
	while(1)
	{
		a=key_scan();
 280:	0e 94 94 00 	call	0x128	; 0x128 <key_scan>
 284:	c8 2f       	mov	r28, r24
		if(a=='1')
 286:	81 33       	cpi	r24, 0x31	; 49
 288:	a1 f4       	brne	.+40     	; 0x2b2 <main+0x80>
		{OCR0=59*3;
 28a:	ac be       	out	0x3c, r10	; 60
		
		PORTC=0x80;
 28c:	d5 bb       	out	0x15, r29	; 21
		LCD_string("Sa");
 28e:	80 e6       	ldi	r24, 0x60	; 96
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_string>
 296:	2f ef       	ldi	r18, 0xFF	; 255
 298:	83 ed       	ldi	r24, 0xD3	; 211
 29a:	90 e3       	ldi	r25, 0x30	; 48
 29c:	21 50       	subi	r18, 0x01	; 1
 29e:	80 40       	sbci	r24, 0x00	; 0
 2a0:	90 40       	sbci	r25, 0x00	; 0
 2a2:	e1 f7       	brne	.-8      	; 0x29c <main+0x6a>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <main+0x74>
 2a6:	00 00       	nop
		_delay_ms(1000);
		OCR0=0;
 2a8:	1c be       	out	0x3c, r1	; 60
		dis_cmd(0x1);}
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	0e 94 4d 00 	call	0x9a	; 0x9a <dis_cmd>
 2b0:	2c c0       	rjmp	.+88     	; 0x30a <main+0xd8>
		if(a=='2')
 2b2:	82 33       	cpi	r24, 0x32	; 50
 2b4:	a1 f4       	brne	.+40     	; 0x2de <main+0xac>
		{OCR0=52*3;
 2b6:	cc be       	out	0x3c, r12	; 60
			PORTC=0x80;
 2b8:	d5 bb       	out	0x15, r29	; 21
		
		LCD_string("Re");
 2ba:	83 e6       	ldi	r24, 0x63	; 99
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_string>
 2c2:	2f ef       	ldi	r18, 0xFF	; 255
 2c4:	83 ed       	ldi	r24, 0xD3	; 211
 2c6:	90 e3       	ldi	r25, 0x30	; 48
 2c8:	21 50       	subi	r18, 0x01	; 1
 2ca:	80 40       	sbci	r24, 0x00	; 0
 2cc:	90 40       	sbci	r25, 0x00	; 0
 2ce:	e1 f7       	brne	.-8      	; 0x2c8 <main+0x96>
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <main+0xa0>
 2d2:	00 00       	nop
		_delay_ms(1000);
		OCR0=0;
 2d4:	1c be       	out	0x3c, r1	; 60
		dis_cmd(0x1);}
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	0e 94 4d 00 	call	0x9a	; 0x9a <dis_cmd>
 2dc:	2c c0       	rjmp	.+88     	; 0x336 <main+0x104>
		if(a=='3')
 2de:	83 33       	cpi	r24, 0x33	; 51
 2e0:	a1 f4       	brne	.+40     	; 0x30a <main+0xd8>
		{OCR0=46*3;
 2e2:	bc be       	out	0x3c, r11	; 60
		PORTC=0x80;
 2e4:	d5 bb       	out	0x15, r29	; 21
		LCD_string("Ga");
 2e6:	86 e6       	ldi	r24, 0x66	; 102
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_string>
 2ee:	2f ef       	ldi	r18, 0xFF	; 255
 2f0:	83 ed       	ldi	r24, 0xD3	; 211
 2f2:	90 e3       	ldi	r25, 0x30	; 48
 2f4:	21 50       	subi	r18, 0x01	; 1
 2f6:	80 40       	sbci	r24, 0x00	; 0
 2f8:	90 40       	sbci	r25, 0x00	; 0
 2fa:	e1 f7       	brne	.-8      	; 0x2f4 <main+0xc2>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <main+0xcc>
 2fe:	00 00       	nop
		_delay_ms(1000);
		OCR0=0;
 300:	1c be       	out	0x3c, r1	; 60
		dis_cmd(0x1);}
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	0e 94 4d 00 	call	0x9a	; 0x9a <dis_cmd>
 308:	2c c0       	rjmp	.+88     	; 0x362 <main+0x130>
		if(a=='4')
 30a:	c4 33       	cpi	r28, 0x34	; 52
 30c:	a1 f4       	brne	.+40     	; 0x336 <main+0x104>
		{OCR0=44*3;
 30e:	dc be       	out	0x3c, r13	; 60
		PORTC=0x80;
 310:	d5 bb       	out	0x15, r29	; 21
		LCD_string("Ma");
 312:	89 e6       	ldi	r24, 0x69	; 105
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_string>
 31a:	2f ef       	ldi	r18, 0xFF	; 255
 31c:	83 ed       	ldi	r24, 0xD3	; 211
 31e:	90 e3       	ldi	r25, 0x30	; 48
 320:	21 50       	subi	r18, 0x01	; 1
 322:	80 40       	sbci	r24, 0x00	; 0
 324:	90 40       	sbci	r25, 0x00	; 0
 326:	e1 f7       	brne	.-8      	; 0x320 <main+0xee>
 328:	00 c0       	rjmp	.+0      	; 0x32a <main+0xf8>
 32a:	00 00       	nop
		_delay_ms(1000);
		OCR0=0;
 32c:	1c be       	out	0x3c, r1	; 60
		dis_cmd(0x1);}
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	0e 94 4d 00 	call	0x9a	; 0x9a <dis_cmd>
 334:	2c c0       	rjmp	.+88     	; 0x38e <main+0x15c>
		if(a=='5')
 336:	c5 33       	cpi	r28, 0x35	; 53
 338:	a1 f4       	brne	.+40     	; 0x362 <main+0x130>
		{OCR0=38*3;
 33a:	ec be       	out	0x3c, r14	; 60
			PORTC=0x80;
 33c:	d5 bb       	out	0x15, r29	; 21
		LCD_string("Pa");
 33e:	8c e6       	ldi	r24, 0x6C	; 108
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_string>
 346:	2f ef       	ldi	r18, 0xFF	; 255
 348:	83 ed       	ldi	r24, 0xD3	; 211
 34a:	90 e3       	ldi	r25, 0x30	; 48
 34c:	21 50       	subi	r18, 0x01	; 1
 34e:	80 40       	sbci	r24, 0x00	; 0
 350:	90 40       	sbci	r25, 0x00	; 0
 352:	e1 f7       	brne	.-8      	; 0x34c <main+0x11a>
 354:	00 c0       	rjmp	.+0      	; 0x356 <main+0x124>
 356:	00 00       	nop
		_delay_ms(1000);
		OCR0=0;
 358:	1c be       	out	0x3c, r1	; 60
		dis_cmd(0x1);}
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	0e 94 4d 00 	call	0x9a	; 0x9a <dis_cmd>
 360:	2c c0       	rjmp	.+88     	; 0x3ba <main+0x188>
		if(a=='6')
 362:	c6 33       	cpi	r28, 0x36	; 54
 364:	a1 f4       	brne	.+40     	; 0x38e <main+0x15c>
		{OCR0=34*5;
 366:	fc be       	out	0x3c, r15	; 60
			PORTC=0x80;
 368:	d5 bb       	out	0x15, r29	; 21
		LCD_string("Dha");
 36a:	8f e6       	ldi	r24, 0x6F	; 111
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_string>
 372:	2f ef       	ldi	r18, 0xFF	; 255
 374:	83 ed       	ldi	r24, 0xD3	; 211
 376:	90 e3       	ldi	r25, 0x30	; 48
 378:	21 50       	subi	r18, 0x01	; 1
 37a:	80 40       	sbci	r24, 0x00	; 0
 37c:	90 40       	sbci	r25, 0x00	; 0
 37e:	e1 f7       	brne	.-8      	; 0x378 <main+0x146>
 380:	00 c0       	rjmp	.+0      	; 0x382 <main+0x150>
 382:	00 00       	nop
		_delay_ms(1000);
		OCR0=0;
 384:	1c be       	out	0x3c, r1	; 60
		dis_cmd(0x1);}
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	0e 94 4d 00 	call	0x9a	; 0x9a <dis_cmd>
 38c:	79 cf       	rjmp	.-270    	; 0x280 <main+0x4e>
		if(a=='7')
 38e:	c7 33       	cpi	r28, 0x37	; 55
 390:	a1 f4       	brne	.+40     	; 0x3ba <main+0x188>
		{OCR0=30*7;
 392:	0c bf       	out	0x3c, r16	; 60
			PORTC=0x80;
 394:	d5 bb       	out	0x15, r29	; 21
		LCD_string("Ni");
 396:	83 e7       	ldi	r24, 0x73	; 115
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_string>
 39e:	2f ef       	ldi	r18, 0xFF	; 255
 3a0:	83 ed       	ldi	r24, 0xD3	; 211
 3a2:	90 e3       	ldi	r25, 0x30	; 48
 3a4:	21 50       	subi	r18, 0x01	; 1
 3a6:	80 40       	sbci	r24, 0x00	; 0
 3a8:	90 40       	sbci	r25, 0x00	; 0
 3aa:	e1 f7       	brne	.-8      	; 0x3a4 <main+0x172>
 3ac:	00 c0       	rjmp	.+0      	; 0x3ae <main+0x17c>
 3ae:	00 00       	nop
		_delay_ms(1000);
		OCR0=0;
 3b0:	1c be       	out	0x3c, r1	; 60
		dis_cmd(0x1);}
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	0e 94 4d 00 	call	0x9a	; 0x9a <dis_cmd>
 3b8:	63 cf       	rjmp	.-314    	; 0x280 <main+0x4e>
		if(a=='8')
 3ba:	c8 33       	cpi	r28, 0x38	; 56
 3bc:	09 f0       	breq	.+2      	; 0x3c0 <main+0x18e>
 3be:	60 cf       	rjmp	.-320    	; 0x280 <main+0x4e>
		{OCR0=28*7;
 3c0:	1c bf       	out	0x3c, r17	; 60
			PORTC=0x80;
 3c2:	d5 bb       	out	0x15, r29	; 21
		LCD_string("Sa'");
 3c4:	86 e7       	ldi	r24, 0x76	; 118
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_string>
 3cc:	2f ef       	ldi	r18, 0xFF	; 255
 3ce:	83 ed       	ldi	r24, 0xD3	; 211
 3d0:	90 e3       	ldi	r25, 0x30	; 48
 3d2:	21 50       	subi	r18, 0x01	; 1
 3d4:	80 40       	sbci	r24, 0x00	; 0
 3d6:	90 40       	sbci	r25, 0x00	; 0
 3d8:	e1 f7       	brne	.-8      	; 0x3d2 <main+0x1a0>
 3da:	00 c0       	rjmp	.+0      	; 0x3dc <main+0x1aa>
 3dc:	00 00       	nop
		_delay_ms(1000);
		OCR0=0;
 3de:	1c be       	out	0x3c, r1	; 60
		dis_cmd(0x1);}
 3e0:	81 e0       	ldi	r24, 0x01	; 1
 3e2:	0e 94 4d 00 	call	0x9a	; 0x9a <dis_cmd>
 3e6:	4c cf       	rjmp	.-360    	; 0x280 <main+0x4e>

000003e8 <_exit>:
 3e8:	f8 94       	cli

000003ea <__stop_program>:
 3ea:	ff cf       	rjmp	.-2      	; 0x3ea <__stop_program>
