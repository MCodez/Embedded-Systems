
SEVEN_SEGMENT 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000152  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000152  000001c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000001c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  00000894  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  0000092b  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  0000095a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000036b  00000000  00000000  0000097a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000e1  00000000  00000000  00000ce5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000023b  00000000  00000000  00000dc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00001004  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000111  00000000  00000000  00001028  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001139  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 a7 00 	jmp	0x14e	; 0x14e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <avr/io.h>
#include <avr/delay.h>

int main(void)
{
    DDRD=0xFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	81 bb       	out	0x11, r24	; 17
	PORTD=0x00;
  70:	12 ba       	out	0x12, r1	; 18
	while(1)
    {
     PORTD=0x40;
  72:	e0 e4       	ldi	r30, 0x40	; 64
	 _delay_ms(10000);
     PORTD=0x79;
  74:	79 e7       	ldi	r23, 0x79	; 121
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x24;
  76:	64 e2       	ldi	r22, 0x24	; 36
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x30;
  78:	50 e3       	ldi	r21, 0x30	; 48
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x19;
  7a:	49 e1       	ldi	r20, 0x19	; 25
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x12;
  7c:	32 e1       	ldi	r19, 0x12	; 18
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x02;
  7e:	22 e0       	ldi	r18, 0x02	; 2
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x78;
  80:	98 e7       	ldi	r25, 0x78	; 120
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x00;
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x10;
  82:	80 e1       	ldi	r24, 0x10	; 16
{
    DDRD=0xFF;
	PORTD=0x00;
	while(1)
    {
     PORTD=0x40;
  84:	e2 bb       	out	0x12, r30	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  86:	af e7       	ldi	r26, 0x7F	; 127
  88:	b4 e8       	ldi	r27, 0x84	; 132
  8a:	fe e1       	ldi	r31, 0x1E	; 30
  8c:	a1 50       	subi	r26, 0x01	; 1
  8e:	b0 40       	sbci	r27, 0x00	; 0
  90:	f0 40       	sbci	r31, 0x00	; 0
  92:	e1 f7       	brne	.-8      	; 0x8c <main+0x20>
  94:	00 c0       	rjmp	.+0      	; 0x96 <main+0x2a>
  96:	00 00       	nop
	 _delay_ms(10000);
     PORTD=0x79;
  98:	72 bb       	out	0x12, r23	; 18
  9a:	af e7       	ldi	r26, 0x7F	; 127
  9c:	b4 e8       	ldi	r27, 0x84	; 132
  9e:	fe e1       	ldi	r31, 0x1E	; 30
  a0:	a1 50       	subi	r26, 0x01	; 1
  a2:	b0 40       	sbci	r27, 0x00	; 0
  a4:	f0 40       	sbci	r31, 0x00	; 0
  a6:	e1 f7       	brne	.-8      	; 0xa0 <main+0x34>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <main+0x3e>
  aa:	00 00       	nop
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x24;
  ac:	62 bb       	out	0x12, r22	; 18
  ae:	af e7       	ldi	r26, 0x7F	; 127
  b0:	b4 e8       	ldi	r27, 0x84	; 132
  b2:	fe e1       	ldi	r31, 0x1E	; 30
  b4:	a1 50       	subi	r26, 0x01	; 1
  b6:	b0 40       	sbci	r27, 0x00	; 0
  b8:	f0 40       	sbci	r31, 0x00	; 0
  ba:	e1 f7       	brne	.-8      	; 0xb4 <main+0x48>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <main+0x52>
  be:	00 00       	nop
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x30;
  c0:	52 bb       	out	0x12, r21	; 18
  c2:	af e7       	ldi	r26, 0x7F	; 127
  c4:	b4 e8       	ldi	r27, 0x84	; 132
  c6:	fe e1       	ldi	r31, 0x1E	; 30
  c8:	a1 50       	subi	r26, 0x01	; 1
  ca:	b0 40       	sbci	r27, 0x00	; 0
  cc:	f0 40       	sbci	r31, 0x00	; 0
  ce:	e1 f7       	brne	.-8      	; 0xc8 <main+0x5c>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <main+0x66>
  d2:	00 00       	nop
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x19;
  d4:	42 bb       	out	0x12, r20	; 18
  d6:	af e7       	ldi	r26, 0x7F	; 127
  d8:	b4 e8       	ldi	r27, 0x84	; 132
  da:	fe e1       	ldi	r31, 0x1E	; 30
  dc:	a1 50       	subi	r26, 0x01	; 1
  de:	b0 40       	sbci	r27, 0x00	; 0
  e0:	f0 40       	sbci	r31, 0x00	; 0
  e2:	e1 f7       	brne	.-8      	; 0xdc <main+0x70>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <main+0x7a>
  e6:	00 00       	nop
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x12;
  e8:	32 bb       	out	0x12, r19	; 18
  ea:	af e7       	ldi	r26, 0x7F	; 127
  ec:	b4 e8       	ldi	r27, 0x84	; 132
  ee:	fe e1       	ldi	r31, 0x1E	; 30
  f0:	a1 50       	subi	r26, 0x01	; 1
  f2:	b0 40       	sbci	r27, 0x00	; 0
  f4:	f0 40       	sbci	r31, 0x00	; 0
  f6:	e1 f7       	brne	.-8      	; 0xf0 <main+0x84>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <main+0x8e>
  fa:	00 00       	nop
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x02;
  fc:	22 bb       	out	0x12, r18	; 18
  fe:	af e7       	ldi	r26, 0x7F	; 127
 100:	b4 e8       	ldi	r27, 0x84	; 132
 102:	fe e1       	ldi	r31, 0x1E	; 30
 104:	a1 50       	subi	r26, 0x01	; 1
 106:	b0 40       	sbci	r27, 0x00	; 0
 108:	f0 40       	sbci	r31, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <main+0x98>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0xa2>
 10e:	00 00       	nop
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x78;
 110:	92 bb       	out	0x12, r25	; 18
 112:	af e7       	ldi	r26, 0x7F	; 127
 114:	b4 e8       	ldi	r27, 0x84	; 132
 116:	fe e1       	ldi	r31, 0x1E	; 30
 118:	a1 50       	subi	r26, 0x01	; 1
 11a:	b0 40       	sbci	r27, 0x00	; 0
 11c:	f0 40       	sbci	r31, 0x00	; 0
 11e:	e1 f7       	brne	.-8      	; 0x118 <main+0xac>
 120:	00 c0       	rjmp	.+0      	; 0x122 <main+0xb6>
 122:	00 00       	nop
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x00;
 124:	12 ba       	out	0x12, r1	; 18
 126:	af e7       	ldi	r26, 0x7F	; 127
 128:	b4 e8       	ldi	r27, 0x84	; 132
 12a:	fe e1       	ldi	r31, 0x1E	; 30
 12c:	a1 50       	subi	r26, 0x01	; 1
 12e:	b0 40       	sbci	r27, 0x00	; 0
 130:	f0 40       	sbci	r31, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <main+0xc0>
 134:	00 c0       	rjmp	.+0      	; 0x136 <main+0xca>
 136:	00 00       	nop
	 _delay_ms(10000);   //TODO:: Please write your application code
     PORTD=0x10;
 138:	82 bb       	out	0x12, r24	; 18
 13a:	af e7       	ldi	r26, 0x7F	; 127
 13c:	b4 e8       	ldi	r27, 0x84	; 132
 13e:	fe e1       	ldi	r31, 0x1E	; 30
 140:	a1 50       	subi	r26, 0x01	; 1
 142:	b0 40       	sbci	r27, 0x00	; 0
 144:	f0 40       	sbci	r31, 0x00	; 0
 146:	e1 f7       	brne	.-8      	; 0x140 <main+0xd4>
 148:	00 c0       	rjmp	.+0      	; 0x14a <main+0xde>
 14a:	00 00       	nop
 14c:	9b cf       	rjmp	.-202    	; 0x84 <main+0x18>

0000014e <_exit>:
 14e:	f8 94       	cli

00000150 <__stop_program>:
 150:	ff cf       	rjmp	.-2      	; 0x150 <__stop_program>
